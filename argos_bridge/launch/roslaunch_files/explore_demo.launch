<launch>
    <param name="/use_sim_time" value="true" />
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
    <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
    <arg name="open_rviz" default="true"/>
    <arg name="ns_0" value="robot_0"/>
    <!-- <node pkg="tf" type="static_transform_publisher" name="world_to_bot_1_tf_broadcaster"  args="0 0 0 0 0 0 /map /$(arg ns_0)/map 100"/> -->
    <node pkg="tf" type="static_transform_publisher" name="world_to_bot_1_tf_broadcaster"  args="0 0 0 0 0 0 /base_footprint /base_link 10"/>
<!-- ======================================================================================================================== -->
    <!-- TurtleBot3 and Gmapping -->
    <include file="$(find turtlebot3_slam)/launch/turtlebot3_gmapping.launch">
        <arg name="model" value="$(arg model)" />
        <arg name="set_map_frame" value="/map" />
        <arg name="set_odom_frame" value="/odom" />
        <arg name="set_base_frame" value="/base_footprint" />
    </include>
<!-- ======================================================================================================================== -->
    <!-- AMCL -->
    <!-- <include file="$(find turtlebot3_navigation)/launch/amcl.launch"> -->
        <!-- <arg name="odom_frame_id" value="$(arg ns_0)/odom" />
        <arg name="base_frame_id" value="$(arg ns_0)/base_footprint" /> -->
    <!-- </include> -->
<!-- ======================================================================================================================== -->
    <!-- move_base -->
    <!-- <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
    <remap from="cmd_vel" to="/cmd_vel"/>
    <remap from="odom" to="/odom"/>
    </node> -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <param name="global_costmap/global_frame" value="map"/>
    <param name="global_costmap/robot_base_frame" value="base_footprint"/>
    <param name="local_costmap/robot_base_frame" value="base_footprint"/>
    <param name="local_costmap/global_frame" value="odom"/>
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
    <!-- <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/> -->
    <!-- <remap from="odom" to="$(arg odom_topic)"/> -->
    <param name="DWAPlannerROS/min_vel_x" value="0.0" if="true" />
  </node>
<!-- ======================================================================================================================== -->
    
    <include file="$(find explore_lite)/launch/explore.launch"/>
<!-- ======================================================================================================================== -->
<!-- Start rviz -->
<group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find turtlebot3_gazebo)/rviz/path_following.rviz"/>
</group>

</launch>